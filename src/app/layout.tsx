import type { Metadata } from "next";
import { Open_Sans } from "next/font/google";
import "./globals.css";
import Navbar from "@/components/Navbar";
import Administrator from "./admin/page";
import SWRConfigContext from "@/context/SWRConfigContext";
import { CompanyProvider } from "@/context/CompanyContext";

const openSans = Open_Sans({
  subsets: ["latin"],
});

// const session = await auth()
// Next.js 13 이상 (특히 App Router 사용 시)에서는 layout.tsx에서 auth()를 직접 호출할 수 없음.
// Next.js의 auth() 함수는 서버 컴포넌트에서 요청(Request) 범위 내에서만 호출 가능하기 때문입니다.
// 📌 해결 방법
// ✅ layout.tsx에서 auth()를 직접 호출하지 않고, 필요한 페이지에서 auth()를 호출하도록 변경
// ✅ 인증 정보가 필요할 경우, server component에서 auth()를 호출하여 prop으로 전달
// console.log('session_layout: ',session)

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};
type Props = {
  children: React.ReactNode;
}
export default function RootLayout({
  children,
}: Props) {
  return (
    <html lang="en" className={openSans.className}>
      {/* <head>
      <Script
        src="https://t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"
        strategy="lazyOnload"
      />
      </head> */}
      <body className=" w-full max-w-screen-xl  overflow-auto mx-auto">
        <Administrator>
          <header className="sticky top-0 bg-white z-10 border-b">
            <Navbar />
          </header>
          <main className=" w-full flex justify-center min-h-full">
            <SWRConfigContext>
              <CompanyProvider>
               {children}
              </CompanyProvider>
            </SWRConfigContext>
          </main>
        </Administrator>
      </body>
    </html>
  );
}
